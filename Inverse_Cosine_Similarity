@ -127,6 +127,23 @@ def inverse_cosine_similarity(vect1:list ,vect2:list) -> float:
  normal_result = cosine_similarity(vect1, vect2)
  return 1.0 - normal_result

def update_word_table(word_table, word:str, category:str):
  assert category in word_table.columns.tolist(), f'{category} not found in {word_table.columns.tolist()}'
  assert 'word' in word_table.columns.tolist(), f'word not found in {word_table.columns.tolist()}'

  word_list = word_table['word'].tolist()
  real_word = word if type(word) == str else word.text

  if real_word in word_list:
    j = word_list.index(real_word)
  else:
    j = len(word_table)
    word_table.loc[j] = [real_word] + [0]*(len(word_table.columns)-1)

  word_table.loc[j, category] += 1

  return word_table

def build_word_table(books:dict):
  assert isinstance(books, dict), f'books not a dictionary but instead a {type(books)}'
